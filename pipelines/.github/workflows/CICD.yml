name: CICD Pipeline 

on:
  push:
    branches:
      - '**'
    paths:
      - 'server/**' 


jobs:
  build-test-push-automerge:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    env:
      IMAGE_NAME: myfastapiapp
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt

      - name: Run unit tests
        run: python -m pytest --maxfail=1 --disable-warnings -q

      - name: Log in to ACR
        run: |
          echo ${{ secrets.ACR_PASSWORD }} | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:pr-${{ github.sha }} .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:pr-${{ github.sha }}

  deploy:
      runs-on: ubuntu-latest
      needs: ci
      if: github.ref == 'refs/heads/main' 
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Set Kubeconfig
          run: |
            echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > $HOME/kubeconfig
            export KUBECONFIG=$HOME/kubeconfig

        - name: Deploy Helm chart
          run: |
            helm upgrade --install myfastapiapp ./server/chart \
              --set image.repository=${{ secrets.ACR_LOGIN_SERVER }}/{{ env.IMAGE_NAME }} \
              --set image.tag=pr-${{ github.sha }}